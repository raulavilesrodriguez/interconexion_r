data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(as.numeric(input$setdata)==1){
string <- reactive(paste0("holaa"))
output$prueba <- renderText(string())
}
)
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
shinyApp(ui, server)
}
itxApp()
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(as.numeric(input$setdata)==1){
string <- reactive(paste0(as.numeric(input$setdata)))
output$prueba <- renderText(string())
}
)
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
shinyApp(ui, server)
}
itxApp()
class(input$setdata)
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(as.numeric(input$setdata)==1){
string <- reactive(paste0(input$setdata))
output$prueba <- renderText(string())
}
)
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
shinyApp(ui, server)
}
itxApp()
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(as.numeric(input$setdata)==1){
string <- reactive(paste0(entrada()$setdata))
output$prueba <- renderText(string())
}
)
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
shinyApp(ui, server)
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(as.numeric(input$setdata)==1){
string <- reactive(paste0(entrada()$setdata))
output$prueba <- renderText(string())
}
)
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
shinyApp(ui, server)
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(as.numeric(input$setdata)==1){
string <- reactive(paste0(input$setdata))
output$prueba <- renderText(string())
}
)
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
shinyApp(ui, server)
}
itxApp()
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(input$setdata=="1"){
string <- reactive(paste0(input$setdata))
output$prueba <- renderText(string())
}
)
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
shinyApp(ui, server)
}
itxApp()
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(input$setdata=="1"){
string <- reactive(paste0(input$setdata))
output$prueba <- renderText(string())
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
)
}
shinyApp(ui, server)
}
itxApp()
#________________Shiny_______________
datos_1 <- list(info_fin, costos_gastos)
itxApp <- function(){
ui <- fluidPage(
theme = bslib::bs_theme(bootswatch = "sandstone"),
titlePanel('', windowTitle = "AIR_ITX"),
HTML(r"(
<h1 style="text-align:center">AIR DE INTERCONEXIÓN Y ACCESO</h1>
<h6 style="color:#FC2947;">
<a style="text-decoration: none"
target="_blank"
href="https://raulaviles.netlify.app/">
Designed by: Byron Raúl Avilés Rodríguez
</a>
</h6>
)"),
textOutput("panel"),
HTML(r"(<br>)"),
tabsetPanel(
id = "tabset",
tabPanel("Empresas Telecom",
sidebarLayout(
sidebarPanel(
selectInput('setdata', 'BD Super Compañías',
choices = c("General Histórico"="1",
"Por Empresa"="2")),
selectInput('empresa', 'Empresa', choices = NULL)
),
mainPanel(
plotOutput('plot_general'),
textOutput('prueba')
)
),
fluidRow(
column(12,titlePanel(textOutput("titulo_tabla"))),
column(12, DT::dataTableOutput("my_tabla"))
)
),
tabPanel("Análisis Costo")
)
)
server <- function(input, output, session) {
output$panel <- renderText({
paste("Actual Panel:", input$tabset)
})
data_1 <- reactive({
req(input$setdata) #to be known
tibble(datos_1[[as.numeric(input$setdata)]])
})
# Tables totals
entrada <- reactive(input$setdata)
observeEvent(entrada(),
if(input$setdata=="1"){
string <- reactive(paste0(input$setdata))
output$prueba <- renderText(string())
}
else{
output$my_tabla <- DT::renderDataTable(data_1(), rownames = FALSE)
}
)
}
shinyApp(ui, server)
}
itxApp()
